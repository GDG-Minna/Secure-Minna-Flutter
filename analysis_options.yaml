# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    prefer_single_quotes: warning
    avoid_print: warning
    avoid_empty_else: warning
    empty_catches: warning
    empty_statements: warning
    always_use_package_imports: warning
    unnecessary_statements: warning
    avoid_unused_constructor_parameters: warning
    camel_case_extensions: warning
    camel_case_types: warning
    constant_identifier_names: warning
    curly_braces_in_flow_control_structures: warning
    exhaustive_cases: warning
    prefer_const_declarations: warning
    prefer_is_empty: warning
    prefer_is_not_empty: warning
    prefer_final_fields: warning
    unnecessary_const: warning
    #prefer_expression_function_bodies: warning
    #always_specify_types: warning
linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  #https://dart.dev/tools/linter-rules#error-rules
  rules:
    avoid_print: true # Uncomment to disable the `avoid_print` rule
    prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule
    empty_statements: true
    empty_catches: true
    always_use_package_imports: true
    unnecessary_statements: true
    avoid_unused_constructor_parameters: true
    camel_case_extensions: true
    camel_case_types: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    exhaustive_cases: true
    prefer_const_declarations: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_final_fields: true
    unnecessary_const:
      true
      #prefer_expression_function_bodies: true
    #always_specify_types: false
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
